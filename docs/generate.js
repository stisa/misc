/* Generated by the Nim Compiler v0.16.1 */
/*   (c) 2017 Andreas Rumpf */

var framePtr = null;
var excHandler = 0;
var lastJSError = null;
if (typeof Int8Array === 'undefined') Int8Array = Array;
if (typeof Int16Array === 'undefined') Int16Array = Array;
if (typeof Int32Array === 'undefined') Int32Array = Array;
if (typeof Uint8Array === 'undefined') Uint8Array = Array;
if (typeof Uint16Array === 'undefined') Uint16Array = Array;
if (typeof Uint32Array === 'undefined') Uint32Array = Array;
if (typeof Float32Array === 'undefined') Float32Array = Array;
if (typeof Float64Array === 'undefined') Float64Array = Array;
var NTI3426 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI3428 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI3446 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI37156 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI37055 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI37053 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI31092 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI37047 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI37121 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI31057 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI37119 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI31034 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI37031 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI3454 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI3458 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI3440 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI104 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI12809 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3408 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI138 = {size: 0,kind: 28,base: null,node: null,finalizer: null};
var NTI140 = {size: 0,kind: 29,base: null,node: null,finalizer: null};
var NTI3485 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI3424 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI3438 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI3442 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NNI3442 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI3442.node = NNI3442;
var NNI3438 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI3438.node = NNI3438;
NTI3485.base = NTI3424;
var NNI3424 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "parent", len: 0, typ: NTI3485, name: "parent", sons: null}, 
{kind: 1, offset: "name", len: 0, typ: NTI140, name: "name", sons: null}, 
{kind: 1, offset: "message", len: 0, typ: NTI138, name: "msg", sons: null}, 
{kind: 1, offset: "trace", len: 0, typ: NTI138, name: "trace", sons: null}]};
NTI3424.node = NNI3424;
var NNI3408 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI3408.node = NNI3408;
NTI3424.base = NTI3408;
NTI3438.base = NTI3424;
NTI3442.base = NTI3438;
var NNI12809 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI140, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI104, name: "Field1", sons: null}]};
NTI12809.node = NNI12809;
var NNI3440 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI3440.node = NNI3440;
NTI3440.base = NTI3438;
var NNI3458 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI3458.node = NNI3458;
NTI3458.base = NTI3424;
var NNI3454 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI3454.node = NNI3454;
NTI3454.base = NTI3424;
var NNI31034 = {kind: 2, offset: 0, typ: null, name: null, len: 7, sons: {"-64": {kind: 1, offset: -64, typ: NTI31034, name: "@", len: 0, sons: null}, 
"-32": {kind: 1, offset: -32, typ: NTI31034, name: "`", len: 0, sons: null}, 
"-16": {kind: 1, offset: -16, typ: NTI31034, name: "p", len: 0, sons: null}, 
"-4": {kind: 1, offset: -4, typ: NTI31034, name: "|", len: 0, sons: null}, 
"-3": {kind: 1, offset: -3, typ: NTI31034, name: "}", len: 0, sons: null}, 
"-2": {kind: 1, offset: -2, typ: NTI31034, name: "~", len: 0, sons: null}, 
"-1": {kind: 1, offset: -1, typ: NTI31034, name: "", len: 0, sons: null}}};
NTI31034.node = NNI31034;
var NNI31057 = {kind: 2, offset: 0, typ: null, name: null, len: 5, sons: {"-64": {kind: 1, offset: -64, typ: NTI31057, name: "@", len: 0, sons: null}, 
"-4": {kind: 1, offset: -4, typ: NTI31057, name: "|", len: 0, sons: null}, 
"-3": {kind: 1, offset: -3, typ: NTI31057, name: "}", len: 0, sons: null}, 
"-2": {kind: 1, offset: -2, typ: NTI31057, name: "~", len: 0, sons: null}, 
"-1": {kind: 1, offset: -1, typ: NTI31057, name: "", len: 0, sons: null}}};
NTI31057.node = NNI31057;
NTI37119.base = NTI31057;
NTI37121.base = NTI31057;
var NNI37031 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "form", len: 0, typ: NTI31034, name: "form", sons: null}, 
{kind: 1, offset: "params", len: 0, typ: NTI37119, name: "params", sons: null}, 
{kind: 1, offset: "returns", len: 0, typ: NTI37121, name: "returns", sons: null}]};
NTI37031.node = NNI37031;
var NNI31092 = {kind: 2, offset: 0, typ: null, name: null, len: 4, sons: {"0": {kind: 1, offset: 0, typ: NTI31092, name: "\x00", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI31092, name: "\x01", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI31092, name: "\x02", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI31092, name: "\x03", len: 0, sons: null}}};
NTI31092.node = NNI31092;
var NNI37047 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "field", len: 0, typ: NTI138, name: "field", sons: null}, 
{kind: 1, offset: "kind", len: 0, typ: NTI31092, name: "kind", sons: null}, 
{kind: 1, offset: "index", len: 0, typ: NTI104, name: "index", sons: null}]};
NTI37047.node = NNI37047;
var NNI37053 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "count", len: 0, typ: NTI104, name: "count", sons: null}, 
{kind: 1, offset: "ttype", len: 0, typ: NTI31057, name: "ttype", sons: null}]};
NTI37053.node = NNI37053;
NTI37156.base = NTI37053;
var NNI37055 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "locals", len: 0, typ: NTI37156, name: "locals", sons: null}, 
{kind: 1, offset: "code", len: 0, typ: NTI138, name: "code", sons: null}]};
NTI37055.node = NNI37055;
var NNI3446 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI3446.node = NNI3446;
NTI3446.base = NTI3424;
var NNI3428 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI3428.node = NNI3428;
var NNI3426 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI3426.node = NNI3426;
NTI3426.base = NTI3424;
NTI3428.base = NTI3426;
function makeNimstrLit(c_13803) {

    var ln = c_13803.length;
    var result = new Array(ln + 1);
    var i = 0;
    for (; i < ln; ++i) {
      result[i] = c_13803.charCodeAt(i);
    }
    result[i] = 0; // terminating zero
    return result;
    }
function SetConstr() {

      var result = {};
      for (var i = 0; i < arguments.length; ++i) {
        var x = arguments[i];
        if (typeof(x) == "object") {
          for (var j = x[0]; j <= x[1]; ++j) {
            result[j] = true;
          }
        } else {
          result[x] = true;
        }
      }
      return result;
    }
function nimCopy(dest_19018, src_19019, ti_19020) {

var result_19429 = null;
switch (ti_19020.kind) {
case 21: case 22: case 23: case 5: if (!(isFatPointer_19001(ti_19020))) {
result_19429 = src_19019;
}
else {
result_19429 = [src_19019[0], src_19019[1]];}


break;
case 19:       if (dest_19018 === null || dest_19018 === undefined) {
        dest_19018 = {};
      }
      else {
        for (var key in dest_19018) { delete dest_19018[key]; }
      }
      for (var key in src_19019) { dest_19018[key] = src_19019[key]; }
      result_19429 = dest_19018;
    
break;
case 18: case 17: if (!((ti_19020.base == null))) {
result_19429 = nimCopy(dest_19018, src_19019, ti_19020.base);
}
else {
if ((ti_19020.kind == 17)) {
result_19429 = (dest_19018 === null || dest_19018 === undefined) ? {m_type: ti_19020} : dest_19018;}
else {
result_19429 = (dest_19018 === null || dest_19018 === undefined) ? {} : dest_19018;}
}
nimCopyAux(result_19429, src_19019, ti_19020.node);

break;
case 24: case 4: case 27: case 16:       if (src_19019 === null) {
        result_19429 = null;
      }
      else {
        if (dest_19018 === null || dest_19018 === undefined) {
          dest_19018 = new Array(src_19019.length);
        }
        else {
          dest_19018.length = src_19019.length;
        }
        result_19429 = dest_19018;
        for (var i = 0; i < src_19019.length; ++i) {
          result_19429[i] = nimCopy(result_19429[i], src_19019[i], ti_19020.base);
        }
      }
    
break;
case 28:       if (src_19019 !== null) {
        result_19429 = src_19019.slice(0);
      }
    
break;
default: 
result_19429 = src_19019;
break;
}
return result_19429;
}
function eqStrings(a_16403, b_16404) {

    if (a_16403 == b_16404) return true;
    if ((!a_16403) || (!b_16404)) return false;
    var alen = a_16403.length;
    if (alen != b_16404.length) return false;
    for (var i = 0; i < alen; ++i)
      if (a_16403[i] != b_16404[i]) return false;
    return true;
  }
function arrayConstr(len_19603, value_19604, typ_19605) {

      var result = new Array(len_19603);
      for (var i = 0; i < len_19603; ++i) result[i] = nimCopy(null, value_19604, typ_19605);
      return result;
    }
function cstrToNimstr(c_14003) {

  var ln = c_14003.length;
  var result = new Array(ln);
  var r = 0;
  for (var i = 0; i < ln; ++i) {
    var ch = c_14003.charCodeAt(i);

    if (ch < 128) {
      result[r] = ch;
    }
    else if((ch > 127) && (ch < 2048)) {
      result[r] = (ch >> 6) | 192;
      ++r;
      result[r] = (ch & 63) | 128;
    }
    else {
      result[r] = (ch >> 12) | 224;
      ++r;
      result[r] = ((ch >> 6) & 63) | 128;
      ++r;
      result[r] = (ch & 63) | 128;
    }
    ++r;
  }
  result[r] = 0; // terminating zero
  return result;
  }
function toJSStr(s_14203) {

    var len = s_14203.length-1;
    var asciiPart = new Array(len);
    var fcc = String.fromCharCode;
    var nonAsciiPart = null;
    var nonAsciiOffset = 0;
    for (var i = 0; i < len; ++i) {
      if (nonAsciiPart !== null) {
        var offset = (i - nonAsciiOffset) * 2;
        var code = s_14203[i].toString(16);
        if (code.length == 1) {
          code = "0"+code;
        }
        nonAsciiPart[offset] = "%";
        nonAsciiPart[offset + 1] = code;
      }
      else if (s_14203[i] < 128)
        asciiPart[i] = fcc(s_14203[i]);
      else {
        asciiPart.length = i;
        nonAsciiOffset = i;
        nonAsciiPart = new Array((len - i) * 2);
        --i;
      }
    }
    asciiPart = asciiPart.join("");
    return (nonAsciiPart === null) ?
        asciiPart : asciiPart + decodeURIComponent(nonAsciiPart.join(""));
  }
function raiseException(e_13206, ename_13207) {

e_13206.name = ename_13207;
if ((excHandler == 0)) {
unhandledException(e_13206);
}

e_13206.trace = nimCopy(null, rawWriteStackTrace_13028(), NTI138);
throw e_13206;}
function chckRange(i_19615, a_19616, b_19617) {

var Tmp1;
var result_19618 = 0;
BeforeRet: do {
if (!(a_19616 <= i_19615)) Tmp1 = false; else {Tmp1 = (i_19615 <= b_19617); }if (Tmp1) {
result_19618 = i_19615;
break BeforeRet;
}
else {
raiseRangeError();
}

} while (false); 
return result_19618;
}
function subInt(a_16803, b_16804) {

      var result = a_16803 - b_16804;
      if (result > 2147483647 || result < -2147483648) raiseOverflow();
      return result;
    }
function chckIndx(i_19609, a_19610, b_19611) {

var Tmp1;
var result_19612 = 0;
BeforeRet: do {
if (!(a_19610 <= i_19609)) Tmp1 = false; else {Tmp1 = (i_19609 <= b_19611); }if (Tmp1) {
result_19612 = i_19609;
break BeforeRet;
}
else {
raiseIndexError();
}

} while (false); 
return result_19612;
}
function addInt(a_16660, b_16661) {

      var result = a_16660 + b_16661;
      if (result > 2147483647 || result < -2147483648) raiseOverflow();
      return result;
    }
function divInt(a_17203, b_17204) {

      if (b_17204 == 0) raiseDivByZero();
      if (b_17204 == -1 && a_17203 == 2147483647) raiseOverflow();
      return Math.floor(a_17203 / b_17204);
    }
function mnewString(len_14403) {

      var result = new Array(len_14403+1);
      result[0] = 0;
      result[len_14403] = 0;
      return result;
    }
function nimCharToStr(x_12451) {

var result_12452 = null;
result_12452 = nimCopy(null, mnewString(1), NTI138);
result_12452[0] = x_12451;
return result_12452;
}
function addChar(x_19718, c_19719) {

    x_19718[x_19718.length-1] = c_19719; x_19718.push(0);
  }
function reprEnum(e_20231, typ_20232) {

var result_20233 = null;
var F={procname:"system.reprEnum",prev:framePtr,filename:"lib\\system\\reprjs.nim",line:0};
framePtr = F;
if (!(isUndefined_20235(typ_20232.node.sons[e_20231]))) {
F.line = 38;
result_20233 = nimCopy(null, cstrToNimstr(typ_20232.node.sons[e_20231].name), NTI138);
}
else {
F.line = 40;
result_20233 = nimCopy(null, (cstrToNimstr((e_20231)+"").slice(0,-1)).concat(makeNimstrLit(" (invalid data!)")), NTI138);
}

framePtr = F.prev;
return result_20233;
}
function absInt(a_18611) {

var Tmp1;
var result_18612 = 0;
if ((a_18611 < 0)) {
Tmp1 = (a_18611 * -1);
}
else {
Tmp1 = a_18611;
}

result_18612 = Tmp1;
return result_18612;
}
function negInt(a_18603) {

var result_18604 = 0;
result_18604 = (a_18603 * -1);
return result_18604;
}
function rawEcho() {

var node_16632 = null;
node_16632 = document.getElementsByTagName('body')[0];if ((node_16632 === null)) {
var e_16647 = null;
e_16647 = {m_type: NTI3428, parent: null, name: null, message: null, trace: null};
e_16647.message = nimCopy(null, makeNimstrLit("<body> element does not exist yet!"), NTI138);
e_16647.parent = null;
raiseException(e_16647, "IOError");
}

    for (var i = 0; i < arguments.length; ++i) {
      var x = toJSStr(arguments[i]);
      node_16632.appendChild(document.createTextNode(x));
    }
    node_16632.appendChild(document.createElement("br"));
    }
var nimvm_5887 = false;
var nim_program_result = 0;
var globalRaiseHook_10805 = [null];
var localRaiseHook_10810 = [null];
var outOfMemHook_10813 = [null];
function isFatPointer_19001(ti_19003) {

var result_19004 = false;
BeforeRet: do {
result_19004 = !((SetConstr(17, 16, 4, 18, 27, 19, 23, 22, 21)[ti_19003.base.kind] != undefined));
break BeforeRet;
} while (false); 
return result_19004;
}
function nimCopyAux(dest_19023, src_19024, n_19026) {

switch (n_19026.kind) {
case 0: 
break;
case 1:       dest_19023[n_19026.offset] = nimCopy(dest_19023[n_19026.offset], src_19024[n_19026.offset], n_19026.typ);
    
break;
case 2: L1: do {
var i_19415 = 0;
var colontmp__19417 = 0;
colontmp__19417 = (n_19026.len - 1);
var res_19420 = 0;
L2: do {
L3: while (true) {
if (!(res_19420 <= colontmp__19417)) break L3;
i_19415 = res_19420;
nimCopyAux(dest_19023, src_19024, n_19026.sons[i_19415]);
res_19420 += 1;
}
} while(false);
} while(false);

break;
case 3:       dest_19023[n_19026.offset] = nimCopy(dest_19023[n_19026.offset], src_19024[n_19026.offset], n_19026.typ);
      for (var i = 0; i < n_19026.sons.length; ++i) {
        nimCopyAux(dest_19023, src_19024, n_19026.sons[i][1]);
      }
    
break;
}
}
function add_10829(x_10832, x_10832_Idx, y_10833) {

        var len = x_10832[0].length-1;
        for (var i = 0; i < y_10833.length; ++i) {
          x_10832[0][len] = y_10833.charCodeAt(i);
          ++len;
        }
        x_10832[0][len] = 0
      }
function auxWriteStackTrace_12804(f_12806) {

var Tmp3;
var result_12807 = [null];
var it_12815 = f_12806;
var i_12816 = 0;
var total_12817 = 0;
var tempFrames_12821 = arrayConstr(64, {Field0: null, Field1: 0}, NTI12809);
L1: do {
L2: while (true) {
if (!!((it_12815 == null))) Tmp3 = false; else {Tmp3 = (i_12816 <= 63); }if (!Tmp3) break L2;
tempFrames_12821[i_12816].Field0 = it_12815.procname;
tempFrames_12821[i_12816].Field1 = it_12815.line;
i_12816 += 1;
total_12817 += 1;
it_12815 = it_12815.prev;
}
} while(false);
L4: do {
L5: while (true) {
if (!!((it_12815 == null))) break L5;
total_12817 += 1;
it_12815 = it_12815.prev;
}
} while(false);
result_12807[0] = nimCopy(null, makeNimstrLit(""), NTI138);
if (!((total_12817 == i_12816))) {
if (result_12807[0] != null) { result_12807[0] = (result_12807[0].slice(0, -1)).concat(makeNimstrLit("(")); } else { result_12807[0] = makeNimstrLit("(");};
if (result_12807[0] != null) { result_12807[0] = (result_12807[0].slice(0, -1)).concat(cstrToNimstr(((total_12817 - i_12816))+"")); } else { result_12807[0] = cstrToNimstr(((total_12817 - i_12816))+"");};
if (result_12807[0] != null) { result_12807[0] = (result_12807[0].slice(0, -1)).concat(makeNimstrLit(" calls omitted) ...\x0A")); } else { result_12807[0] = makeNimstrLit(" calls omitted) ...\x0A");};
}

L6: do {
var j_13015 = 0;
var colontmp__13021 = 0;
colontmp__13021 = (i_12816 - 1);
var res_13024 = colontmp__13021;
L7: do {
L8: while (true) {
if (!(0 <= res_13024)) break L8;
j_13015 = res_13024;
add_10829(result_12807, 0, tempFrames_12821[j_13015].Field0);
if ((0 < tempFrames_12821[j_13015].Field1)) {
if (result_12807[0] != null) { result_12807[0] = (result_12807[0].slice(0, -1)).concat(makeNimstrLit(", line: ")); } else { result_12807[0] = makeNimstrLit(", line: ");};
if (result_12807[0] != null) { result_12807[0] = (result_12807[0].slice(0, -1)).concat(cstrToNimstr((tempFrames_12821[j_13015].Field1)+"")); } else { result_12807[0] = cstrToNimstr((tempFrames_12821[j_13015].Field1)+"");};
}

if (result_12807[0] != null) { result_12807[0] = (result_12807[0].slice(0, -1)).concat(makeNimstrLit("\x0A")); } else { result_12807[0] = makeNimstrLit("\x0A");};
res_13024 -= 1;
}
} while(false);
} while(false);
return result_12807[0];
}
function rawWriteStackTrace_13028() {

var result_13030 = null;
if (!((framePtr == null))) {
result_13030 = nimCopy(null, (makeNimstrLit("Traceback (most recent call last)\x0A").slice(0,-1)).concat(auxWriteStackTrace_12804(framePtr)), NTI138);
}
else {
result_13030 = nimCopy(null, makeNimstrLit("No stack traceback available\x0A"), NTI138);
}

return result_13030;
}
function unhandledException(e_13054) {

var Tmp1;
var buf_13055 = /**/[makeNimstrLit("")];
if (!!(eqStrings(e_13054.message, null))) Tmp1 = false; else {Tmp1 = !((e_13054.message[0] == 0)); }if (Tmp1) {
if (buf_13055[0] != null) { buf_13055[0] = (buf_13055[0].slice(0, -1)).concat(makeNimstrLit("Error: unhandled exception: ")); } else { buf_13055[0] = makeNimstrLit("Error: unhandled exception: ");};
if (buf_13055[0] != null) { buf_13055[0] = (buf_13055[0].slice(0, -1)).concat(e_13054.message); } else { buf_13055[0] = e_13054.message;};
}
else {
if (buf_13055[0] != null) { buf_13055[0] = (buf_13055[0].slice(0, -1)).concat(makeNimstrLit("Error: unhandled exception")); } else { buf_13055[0] = makeNimstrLit("Error: unhandled exception");};
}

if (buf_13055[0] != null) { buf_13055[0] = (buf_13055[0].slice(0, -1)).concat(makeNimstrLit(" [")); } else { buf_13055[0] = makeNimstrLit(" [");};
add_10829(buf_13055, 0, e_13054.name);
if (buf_13055[0] != null) { buf_13055[0] = (buf_13055[0].slice(0, -1)).concat(makeNimstrLit("]\x0A")); } else { buf_13055[0] = makeNimstrLit("]\x0A");};
if (buf_13055[0] != null) { buf_13055[0] = (buf_13055[0].slice(0, -1)).concat(rawWriteStackTrace_13028()); } else { buf_13055[0] = rawWriteStackTrace_13028();};
var cbuf_13201 = toJSStr(buf_13055[0]);
framePtr = null;
  if (typeof(Error) !== "undefined") {
    throw new Error(cbuf_13201);
  }
  else {
    throw cbuf_13201;
  }
  }
function raiseOverflow() {

var e_13641 = null;
e_13641 = {m_type: NTI3442, parent: null, name: null, message: null, trace: null};
e_13641.message = nimCopy(null, makeNimstrLit("over- or underflow"), NTI138);
e_13641.parent = null;
raiseException(e_13641, "OverflowError");
}
function raiseDivByZero() {

var e_13659 = null;
e_13659 = {m_type: NTI3440, parent: null, name: null, message: null, trace: null};
e_13659.message = nimCopy(null, makeNimstrLit("division by zero"), NTI138);
e_13659.parent = null;
raiseException(e_13659, "DivByZeroError");
}
var objectID_57233 = /**/[0];
function module_38474(magic_38477, version_38478) {

var result_38479 = null;
var F={procname:"generation.module",prev:framePtr,filename:"C:\\Users\\stisa\\OneDrive\\Progetti\\nimwasm-rewrite\\src\\nimwasm\\wasm\\generation.nim",line:0};
framePtr = F;
result_38479 = {magic: 0, version: 0, custom: null, types: null, imports: null, functions: null, tables: null, memory: null, globals: null, exports: null, start: null, elements: null, codes: null, datas: null};
F.line = 53;
result_38479.magic = magic_38477;
F.line = 54;
result_38479.version = version_38478;
framePtr = F.prev;
return result_38479;
}
var mymod_69001 = /**/[module_38474(1836278016, 1)];
function raiseRangeError() {

var e_13677 = null;
e_13677 = {m_type: NTI3458, parent: null, name: null, message: null, trace: null};
e_13677.message = nimCopy(null, makeNimstrLit("value out of range"), NTI138);
e_13677.parent = null;
raiseException(e_13677, "RangeError");
}
function raiseIndexError() {

var e_13695 = null;
e_13695 = {m_type: NTI3454, parent: null, name: null, message: null, trace: null};
e_13695.message = nimCopy(null, makeNimstrLit("index out of bounds"), NTI138);
e_13695.parent = null;
raiseException(e_13695, "IndexError");
}
function at__38103(a_38108) {

var result_38110 = null;
var F={procname:"@.@",prev:framePtr,filename:"lib\\system.nim",line:0};
framePtr = F;
result_38110 = new Array(chckRange((a_38108 != null ? a_38108.length : 0), 0, 2147483647)); for (var i=0;i<chckRange((a_38108 != null ? a_38108.length : 0), 0, 2147483647);++i) {result_38110[i]=0;}L1: do {
F.line = 2181;
var i_38144 = 0;
F.line = 1943;
var colontmp__38146 = 0;
F.line = 2181;
colontmp__38146 = subInt((a_38108 != null ? a_38108.length : 0), 1);
F.line = 1925;
var res_38149 = 0;
L2: do {
F.line = 1926;
L3: while (true) {
if (!(res_38149 <= colontmp__38146)) break L3;
F.line = 1927;
i_38144 = res_38149;
F.line = 2181;
result_38110[chckIndx(i_38144, 0, result_38110.length)-0] = a_38108[chckIndx(i_38144, 0, a_38108.length)-0];
res_38149 = addInt(res_38149, 1);
}
} while(false);
} while(false);
framePtr = F.prev;
return result_38110;
}
function fnType_38094(kind_38096, returns_38098, params_38100) {

var result_38101 = {form: 0, params: null, returns: null};
var F={procname:"generation.fnType",prev:framePtr,filename:"C:\\Users\\stisa\\OneDrive\\Progetti\\nimwasm-rewrite\\src\\nimwasm\\wasm\\generation.nim",line:0};
framePtr = F;
F.line = 27;
nimCopy(result_38101, {form: kind_38096, params: at__38103(params_38100), returns: [returns_38098]}, NTI37031);
framePtr = F.prev;
return result_38101;
}
var ft_69008 = /**/[fnType_38094(-32, -1, [-1, -1])];
function at__38302(a_38307) {

var result_38309 = null;
var F={procname:"@.@",prev:framePtr,filename:"lib\\system.nim",line:0};
framePtr = F;
result_38309 = new Array(chckRange((a_38307 != null ? a_38307.length : 0), 0, 2147483647)); for (var i=0;i<chckRange((a_38307 != null ? a_38307.length : 0), 0, 2147483647);++i) {result_38309[i]={form: 0, params: null, returns: null};}L1: do {
F.line = 2181;
var i_38343 = 0;
F.line = 1943;
var colontmp__38345 = 0;
F.line = 2181;
colontmp__38345 = subInt((a_38307 != null ? a_38307.length : 0), 1);
F.line = 1925;
var res_38348 = 0;
L2: do {
F.line = 1926;
L3: while (true) {
if (!(res_38348 <= colontmp__38345)) break L3;
F.line = 1927;
i_38343 = res_38348;
F.line = 2181;
nimCopy(result_38309[chckIndx(i_38343, 0, result_38309.length)-0], a_38307[chckIndx(i_38343, 0, a_38307.length)-0], NTI37031);
res_38348 = addInt(res_38348, 1);
}
} while(false);
} while(false);
framePtr = F.prev;
return result_38309;
}
function typeSec_38296(entries_38299) {

var result_38300 = null;
var F={procname:"generation.typeSec",prev:framePtr,filename:"C:\\Users\\stisa\\OneDrive\\Progetti\\nimwasm-rewrite\\src\\nimwasm\\wasm\\generation.nim",line:0};
framePtr = F;
F.line = 43;
result_38300 = {entries: at__38302(entries_38299)};
framePtr = F.prev;
return result_38300;
}
mymod_69001[0].types = typeSec_38296([ft_69008[0]]);
function at__38245(a_38250) {

var result_38252 = null;
var F={procname:"@.@",prev:framePtr,filename:"lib\\system.nim",line:0};
framePtr = F;
result_38252 = new Array(chckRange((a_38250 != null ? a_38250.length : 0), 0, 2147483647)); for (var i=0;i<chckRange((a_38250 != null ? a_38250.length : 0), 0, 2147483647);++i) {result_38252[i]=0;}L1: do {
F.line = 2181;
var i_38286 = 0;
F.line = 1943;
var colontmp__38288 = 0;
F.line = 2181;
colontmp__38288 = subInt((a_38250 != null ? a_38250.length : 0), 1);
F.line = 1925;
var res_38291 = 0;
L2: do {
F.line = 1926;
L3: while (true) {
if (!(res_38291 <= colontmp__38288)) break L3;
F.line = 1927;
i_38286 = res_38291;
F.line = 2181;
result_38252[chckIndx(i_38286, 0, result_38252.length)-0] = a_38250[chckIndx(i_38286, 0, a_38250.length)-0];
res_38291 = addInt(res_38291, 1);
}
} while(false);
} while(false);
framePtr = F.prev;
return result_38252;
}
function fnSec_38231(findices_38234) {

var result_38235 = null;
var F={procname:"generation.fnSec",prev:framePtr,filename:"C:\\Users\\stisa\\OneDrive\\Progetti\\nimwasm-rewrite\\src\\nimwasm\\wasm\\generation.nim",line:0};
framePtr = F;
result_38235 = {entries: null};
F.line = 41;
result_38235 = {entries: at__38245(findices_38234)};
framePtr = F.prev;
return result_38235;
}
mymod_69001[0].functions = fnSec_38231([0]);
function exportEntry_38353(field_38355, kind_38356, index_38357) {

var result_38358 = {field: null, kind: 0, index: 0};
var F={procname:"generation.exportEntry",prev:framePtr,filename:"C:\\Users\\stisa\\OneDrive\\Progetti\\nimwasm-rewrite\\src\\nimwasm\\wasm\\generation.nim",line:0};
framePtr = F;
F.line = 45;
nimCopy(result_38358, {field: field_38355, kind: kind_38356, index: index_38357}, NTI37047);
framePtr = F.prev;
return result_38358;
}
var ee_69014 = /**/[exportEntry_38353(makeNimstrLit("add"), 0, 0)];
function at__38366(a_38371) {

var result_38373 = null;
var F={procname:"@.@",prev:framePtr,filename:"lib\\system.nim",line:0};
framePtr = F;
result_38373 = new Array(chckRange((a_38371 != null ? a_38371.length : 0), 0, 2147483647)); for (var i=0;i<chckRange((a_38371 != null ? a_38371.length : 0), 0, 2147483647);++i) {result_38373[i]={field: null, kind: 0, index: 0};}L1: do {
F.line = 2181;
var i_38407 = 0;
F.line = 1943;
var colontmp__38409 = 0;
F.line = 2181;
colontmp__38409 = subInt((a_38371 != null ? a_38371.length : 0), 1);
F.line = 1925;
var res_38412 = 0;
L2: do {
F.line = 1926;
L3: while (true) {
if (!(res_38412 <= colontmp__38409)) break L3;
F.line = 1927;
i_38407 = res_38412;
F.line = 2181;
nimCopy(result_38373[chckIndx(i_38407, 0, result_38373.length)-0], a_38371[chckIndx(i_38407, 0, a_38371.length)-0], NTI37047);
res_38412 = addInt(res_38412, 1);
}
} while(false);
} while(false);
framePtr = F.prev;
return result_38373;
}
function exportSec_38360(eentries_38363) {

var result_38364 = null;
var F={procname:"generation.exportSec",prev:framePtr,filename:"C:\\Users\\stisa\\OneDrive\\Progetti\\nimwasm-rewrite\\src\\nimwasm\\wasm\\generation.nim",line:0};
framePtr = F;
F.line = 47;
result_38364 = {entries: at__38366(eentries_38363)};
framePtr = F.prev;
return result_38364;
}
mymod_69001[0].exports = exportSec_38360([ee_69014[0]]);
function at__38180(a_38185) {

var result_38187 = null;
var F={procname:"@.@",prev:framePtr,filename:"lib\\system.nim",line:0};
framePtr = F;
result_38187 = new Array(chckRange((a_38185 != null ? a_38185.length : 0), 0, 2147483647)); for (var i=0;i<chckRange((a_38185 != null ? a_38185.length : 0), 0, 2147483647);++i) {result_38187[i]={count: 0, ttype: 0};}L1: do {
F.line = 2181;
var i_38221 = 0;
F.line = 1943;
var colontmp__38223 = 0;
F.line = 2181;
colontmp__38223 = subInt((a_38185 != null ? a_38185.length : 0), 1);
F.line = 1925;
var res_38226 = 0;
L2: do {
F.line = 1926;
L3: while (true) {
if (!(res_38226 <= colontmp__38223)) break L3;
F.line = 1927;
i_38221 = res_38226;
F.line = 2181;
nimCopy(result_38187[chckIndx(i_38221, 0, result_38187.length)-0], a_38185[chckIndx(i_38221, 0, a_38185.length)-0], NTI37053);
res_38226 = addInt(res_38226, 1);
}
} while(false);
} while(false);
framePtr = F.prev;
return result_38187;
}
function fnBody_38173(code_38175, locals_38177) {

var result_38178 = {locals: null, code: null};
var F={procname:"generation.fnBody",prev:framePtr,filename:"C:\\Users\\stisa\\OneDrive\\Progetti\\nimwasm-rewrite\\src\\nimwasm\\wasm\\generation.nim",line:0};
framePtr = F;
F.line = 37;
nimCopy(result_38178, {locals: at__38180(locals_38177), code: code_38175}, NTI37055);
framePtr = F.prev;
return result_38178;
}
var fb_69020 = /**/[fnBody_38173(makeNimstrLit(" \x00 \x01j"), [])];
function at__38423(a_38428) {

var result_38430 = null;
var F={procname:"@.@",prev:framePtr,filename:"lib\\system.nim",line:0};
framePtr = F;
result_38430 = new Array(chckRange((a_38428 != null ? a_38428.length : 0), 0, 2147483647)); for (var i=0;i<chckRange((a_38428 != null ? a_38428.length : 0), 0, 2147483647);++i) {result_38430[i]={locals: null, code: null};}L1: do {
F.line = 2181;
var i_38464 = 0;
F.line = 1943;
var colontmp__38466 = 0;
F.line = 2181;
colontmp__38466 = subInt((a_38428 != null ? a_38428.length : 0), 1);
F.line = 1925;
var res_38469 = 0;
L2: do {
F.line = 1926;
L3: while (true) {
if (!(res_38469 <= colontmp__38466)) break L3;
F.line = 1927;
i_38464 = res_38469;
F.line = 2181;
nimCopy(result_38430[chckIndx(i_38464, 0, result_38430.length)-0], a_38428[chckIndx(i_38464, 0, a_38428.length)-0], NTI37055);
res_38469 = addInt(res_38469, 1);
}
} while(false);
} while(false);
framePtr = F.prev;
return result_38430;
}
function codeSec_38417(fbodies_38420) {

var result_38421 = null;
var F={procname:"generation.codeSec",prev:framePtr,filename:"C:\\Users\\stisa\\OneDrive\\Progetti\\nimwasm-rewrite\\src\\nimwasm\\wasm\\generation.nim",line:0};
framePtr = F;
F.line = 49;
result_38421 = {entries: at__38423(fbodies_38420)};
framePtr = F.prev;
return result_38421;
}
mymod_69001[0].codes = codeSec_38417([fb_69020[0]]);
var wasmexports_70001 = [null];
function encode_40651(x_40653) {

var result_40654 = null;
var F={procname:"encodes.encode",prev:framePtr,filename:"C:\\Users\\stisa\\OneDrive\\Progetti\\nimwasm-rewrite\\src\\nimwasm\\wasm\\encodes.nim",line:0};
framePtr = F;
F.line = 93;
result_40654 = nimCopy(null, makeNimstrLit(""), NTI138);
result_40654.length = 4+1; result_40654[result_40654.length-1] = 0;
F.line = 97;
var bt_40801 = 0;
F.line = 98;
var long_40802 = x_40653;
L1: do {
F.line = 99;
var i_40812 = 0;
F.line = 1925;
var res_40820 = 0;
L2: do {
F.line = 1926;
L3: while (true) {
if (!(res_40820 <= 3)) break L3;
F.line = 1927;
i_40812 = res_40820;
F.line = 100;
bt_40801 = (long_40802 & 255);
F.line = 101;
result_40654[chckIndx(i_40812, 0, result_40654.length)-0] = chckRange(bt_40801, 0, 255);
F.line = 102;
long_40802 = divInt(subInt(long_40802, bt_40801), 256);
res_40820 = addInt(res_40820, 1);
}
} while(false);
} while(false);
framePtr = F.prev;
return result_40654;
}
function unsignedLEB128_36042(value_36044, padding_36045) {

var Tmp1;
var Tmp4;
var Tmp5;
var result_36046 = null;
var F={procname:"leb128.unsignedLEB128",prev:framePtr,filename:"C:\\Users\\stisa\\OneDrive\\Progetti\\nimwasm-rewrite\\src\\nimwasm\\leb128.nim",line:0};
framePtr = F;
F.line = 30;
var val_36047 = value_36044;
F.line = 31;
var b_36048 = 0;
F.line = 32;
var pad_36049 = padding_36045;
F.line = 34;
b_36048 = ((val_36047 & 127)|0);
F.line = 35;
val_36047 = ((val_36047 >>> 0) >>> 7);
if (!((val_36047 == 0))) Tmp1 = true; else {Tmp1 = (0 < pad_36049); }if (Tmp1) {
F.line = 37;
b_36048 = (b_36048 | 128);
}

F.line = 38;
result_36046 = nimCopy(null, nimCharToStr(chckRange(b_36048, 0, 255)), NTI138);
pad_36049 = subInt(pad_36049, 1);
L2: do {
F.line = 41;
L3: while (true) {
if (!((val_36047 == 0))) Tmp4 = true; else {Tmp4 = (-1 < pad_36049); }if (!Tmp4) break L3;
F.line = 42;
b_36048 = ((val_36047 & 127)|0);
F.line = 43;
val_36047 = ((val_36047 >>> 0) >>> 7);
if (!((val_36047 == 0))) Tmp5 = true; else {Tmp5 = (0 < padding_36045); }if (Tmp5) {
F.line = 45;
b_36048 = (b_36048 | 128);
}

if (result_36046 != null) { addChar(result_36046, chckRange(b_36048, 0, 255)); } else { result_36046 = [chckRange(b_36048, 0, 255), 0]; };
pad_36049 = subInt(pad_36049, 1);
}
} while(false);
framePtr = F.prev;
return result_36046;
}
function isUndefined_20235(x_20239) {

var result_20240 = false;
var F={procname:"isUndefined.isUndefined",prev:framePtr,filename:"lib\\system\\reprjs.nim",line:0};
framePtr = F;
F.line = 34;
result_20240= x_20239 === undefined;framePtr = F.prev;
return result_20240;
}
function sysFatal_21821(message_21827) {

var F={procname:"sysFatal.sysFatal",prev:framePtr,filename:"lib\\system.nim",line:0};
framePtr = F;
F.line = 2617;
var e_21829 = null;
e_21829 = {m_type: NTI3446, parent: null, name: null, message: null, trace: null};
F.line = 2619;
e_21829.message = nimCopy(null, message_21827, NTI138);
F.line = 2620;
raiseException(e_21829, "AssertionError");
framePtr = F.prev;
}
function raiseAssert_21816(msg_21818) {

var F={procname:"system.raiseAssert",prev:framePtr,filename:"lib\\system.nim",line:0};
framePtr = F;
sysFatal_21821(msg_21818);
framePtr = F.prev;
}
function failedAssertImpl_21839(msg_21841) {

var F={procname:"system.failedAssertImpl",prev:framePtr,filename:"lib\\system.nim",line:0};
framePtr = F;
raiseAssert_21816(msg_21841);
framePtr = F.prev;
}
function encode_39002(ft_39004) {

var result_39005 = null;
var F={procname:"encodes.encode",prev:framePtr,filename:"C:\\Users\\stisa\\OneDrive\\Progetti\\nimwasm-rewrite\\src\\nimwasm\\wasm\\encodes.nim",line:0};
framePtr = F;
F.line = 4;
result_39005 = nimCopy(null, reprEnum(ft_39004.form, NTI31034), NTI138);
if (result_39005 != null) { result_39005 = (result_39005.slice(0, -1)).concat(unsignedLEB128_36042((ft_39004.params != null ? ft_39004.params.length : 0), 0)); } else { result_39005 = unsignedLEB128_36042((ft_39004.params != null ? ft_39004.params.length : 0), 0);};
L1: do {
F.line = 6;
var p_39202 = 0;
F.line = 3542;
var colontmp__39235 = null;
F.line = 6;
colontmp__39235 = ft_39004.params;
F.line = 3544;
var i_39238 = 0;
F.line = 3545;
var L_39240 = (colontmp__39235 != null ? colontmp__39235.length : 0);
L2: do {
F.line = 3546;
L3: while (true) {
if (!(i_39238 < L_39240)) break L3;
F.line = 3547;
p_39202 = colontmp__39235[chckIndx(i_39238, 0, colontmp__39235.length)-0];
if (result_39005 != null) { result_39005 = (result_39005.slice(0, -1)).concat(reprEnum(p_39202, NTI31057)); } else { result_39005 = reprEnum(p_39202, NTI31057);};
i_39238 = addInt(i_39238, 1);
if (!(((colontmp__39235 != null ? colontmp__39235.length : 0) == L_39240))) {
failedAssertImpl_21839(makeNimstrLit("len(a) == L seq modified while iterating over it"));
}

}
} while(false);
} while(false);
if (result_39005 != null) { result_39005 = (result_39005.slice(0, -1)).concat(unsignedLEB128_36042((ft_39004.returns != null ? ft_39004.returns.length : 0), 0)); } else { result_39005 = unsignedLEB128_36042((ft_39004.returns != null ? ft_39004.returns.length : 0), 0);};
if ((0 < (ft_39004.returns != null ? ft_39004.returns.length : 0))) {
if (result_39005 != null) { result_39005 = (result_39005.slice(0, -1)).concat(reprEnum(ft_39004.returns[0], NTI31057)); } else { result_39005 = reprEnum(ft_39004.returns[0], NTI31057);};
}

framePtr = F.prev;
return result_39005;
}
function encode_39613(ts_39615) {

var result_39616 = null;
var F={procname:"encodes.encode",prev:framePtr,filename:"C:\\Users\\stisa\\OneDrive\\Progetti\\nimwasm-rewrite\\src\\nimwasm\\wasm\\encodes.nim",line:0};
framePtr = F;
F.line = 32;
result_39616 = nimCopy(null, makeNimstrLit("\x01"), NTI138);
F.line = 33;
var temp_39633 = unsignedLEB128_36042((ts_39615.entries != null ? ts_39615.entries.length : 0), 0);
L1: do {
F.line = 34;
var entry_39802 = {form: 0, params: null, returns: null};
F.line = 3542;
var colontmp__39805 = null;
F.line = 34;
colontmp__39805 = ts_39615.entries;
F.line = 3544;
var i_39808 = 0;
F.line = 3545;
var L_39810 = (colontmp__39805 != null ? colontmp__39805.length : 0);
L2: do {
F.line = 3546;
L3: while (true) {
if (!(i_39808 < L_39810)) break L3;
F.line = 3547;
entry_39802 = colontmp__39805[chckIndx(i_39808, 0, colontmp__39805.length)-0];
if (temp_39633 != null) { temp_39633 = (temp_39633.slice(0, -1)).concat(encode_39002(entry_39802)); } else { temp_39633 = encode_39002(entry_39802);};
i_39808 = addInt(i_39808, 1);
if (!(((colontmp__39805 != null ? colontmp__39805.length : 0) == L_39810))) {
failedAssertImpl_21839(makeNimstrLit("len(a) == L seq modified while iterating over it"));
}

}
} while(false);
} while(false);
if (result_39616 != null) { result_39616 = (result_39616.slice(0, -1)).concat(unsignedLEB128_36042((temp_39633 != null ? temp_39633.length-1 : 0), 0)); } else { result_39616 = unsignedLEB128_36042((temp_39633 != null ? temp_39633.length-1 : 0), 0);};
if (result_39616 != null) { result_39616 = (result_39616.slice(0, -1)).concat(temp_39633); } else { result_39616 = temp_39633;};
framePtr = F.prev;
return result_39616;
}
function encode_39412(fs_39414) {

var result_39415 = null;
var F={procname:"encodes.encode",prev:framePtr,filename:"C:\\Users\\stisa\\OneDrive\\Progetti\\nimwasm-rewrite\\src\\nimwasm\\wasm\\encodes.nim",line:0};
framePtr = F;
F.line = 24;
result_39415 = nimCopy(null, makeNimstrLit("\x03"), NTI138);
F.line = 25;
var temp_39432 = unsignedLEB128_36042((fs_39414.entries != null ? fs_39414.entries.length : 0), 0);
L1: do {
F.line = 26;
var i_39602 = 0;
F.line = 3542;
var colontmp__39606 = null;
F.line = 26;
colontmp__39606 = fs_39414.entries;
F.line = 3544;
var i_39609 = 0;
F.line = 3545;
var L_39611 = (colontmp__39606 != null ? colontmp__39606.length : 0);
L2: do {
F.line = 3546;
L3: while (true) {
if (!(i_39609 < L_39611)) break L3;
F.line = 3547;
i_39602 = colontmp__39606[chckIndx(i_39609, 0, colontmp__39606.length)-0];
if (temp_39432 != null) { temp_39432 = (temp_39432.slice(0, -1)).concat(unsignedLEB128_36042(i_39602, 0)); } else { temp_39432 = unsignedLEB128_36042(i_39602, 0);};
i_39609 = addInt(i_39609, 1);
if (!(((colontmp__39606 != null ? colontmp__39606.length : 0) == L_39611))) {
failedAssertImpl_21839(makeNimstrLit("len(a) == L seq modified while iterating over it"));
}

}
} while(false);
} while(false);
if (result_39415 != null) { result_39415 = (result_39415.slice(0, -1)).concat(unsignedLEB128_36042((temp_39432 != null ? temp_39432.length-1 : 0), 0)); } else { result_39415 = unsignedLEB128_36042((temp_39432 != null ? temp_39432.length-1 : 0), 0);};
if (result_39415 != null) { result_39415 = (result_39415.slice(0, -1)).concat(temp_39432); } else { result_39415 = temp_39432;};
framePtr = F.prev;
return result_39415;
}
function log2_36007(x_36011) {

var result_36012 = 0.0;
BeforeRet: do {
result_36012 = (Math.log(x_36011) / Math.log(2.0000000000000000e+000));
break BeforeRet;
} while (false); 
return result_36012;
}
function signedLEB128_36001(value_36003) {

var result_36004 = null;
var F={procname:"leb128.signedLEB128",prev:framePtr,filename:"C:\\Users\\stisa\\OneDrive\\Progetti\\nimwasm-rewrite\\src\\nimwasm\\leb128.nim",line:0};
framePtr = F;
F.line = 5;
var val_36005 = value_36003;
F.line = 7;
var size_36013 = Math.ceil(log2_36007(absInt(val_36005)));
F.line = 8;
var more_36014 = true;
F.line = 9;
var isNegative_36015 = (value_36003 < 0);
F.line = 10;
var b_36016 = 0;
L1: do {
F.line = 11;
L2: while (true) {
if (!more_36014) break L2;
F.line = 13;
b_36016 = (val_36005 & 127);
F.line = 15;
val_36005 = ((val_36005 >>> 0) >>> 7);
if (isNegative_36015) {
F.line = 18;
val_36005 = ((val_36005|0) | negInt(((1 >>> 0) >>> subInt(size_36013, 7))));
}

if ((((val_36005 == 0) && ((b_36016 & 64) == 0)) || ((val_36005 == -1) && ((b_36016 & 64) == 64)))) {
F.line = 22;
more_36014 = false;
}
else {
F.line = 24;
b_36016 = (b_36016 | 128);
}

if ((result_36004 === null)) {
F.line = 25;
result_36004 = nimCopy(null, nimCharToStr(chckRange(b_36016, 0, 255)), NTI138);
}
else {
if (result_36004 != null) { addChar(result_36004, chckRange(b_36016, 0, 255)); } else { result_36004 = [chckRange(b_36016, 0, 255), 0]; };
}

}
} while(false);
framePtr = F.prev;
return result_36004;
}
function encode_39812(ee_39814) {

var result_39815 = null;
var F={procname:"encodes.encode",prev:framePtr,filename:"C:\\Users\\stisa\\OneDrive\\Progetti\\nimwasm-rewrite\\src\\nimwasm\\wasm\\encodes.nim",line:0};
framePtr = F;
F.line = 40;
result_39815 = nimCopy(null, signedLEB128_36001((ee_39814.field != null ? ee_39814.field.length-1 : 0)), NTI138);
if (result_39815 != null) { result_39815 = (result_39815.slice(0, -1)).concat(ee_39814.field); } else { result_39815 = ee_39814.field;};
if (result_39815 != null) { result_39815 = (result_39815.slice(0, -1)).concat(reprEnum(ee_39814.kind, NTI31092)); } else { result_39815 = reprEnum(ee_39814.kind, NTI31092);};
if (result_39815 != null) { result_39815 = (result_39815.slice(0, -1)).concat(unsignedLEB128_36042(ee_39814.index, 0)); } else { result_39815 = unsignedLEB128_36042(ee_39814.index, 0);};
framePtr = F.prev;
return result_39815;
}
function encode_40003(es_40005) {

var result_40006 = null;
var F={procname:"encodes.encode",prev:framePtr,filename:"C:\\Users\\stisa\\OneDrive\\Progetti\\nimwasm-rewrite\\src\\nimwasm\\wasm\\encodes.nim",line:0};
framePtr = F;
F.line = 52;
result_40006 = nimCopy(null, makeNimstrLit("\x07"), NTI138);
F.line = 53;
var temp_40023 = unsignedLEB128_36042((es_40005.entries != null ? es_40005.entries.length : 0), 0);
L1: do {
F.line = 55;
var entry_40202 = {field: null, kind: 0, index: 0};
F.line = 3542;
var colontmp__40205 = null;
F.line = 55;
colontmp__40205 = es_40005.entries;
F.line = 3544;
var i_40208 = 0;
F.line = 3545;
var L_40210 = (colontmp__40205 != null ? colontmp__40205.length : 0);
L2: do {
F.line = 3546;
L3: while (true) {
if (!(i_40208 < L_40210)) break L3;
F.line = 3547;
entry_40202 = colontmp__40205[chckIndx(i_40208, 0, colontmp__40205.length)-0];
if (temp_40023 != null) { temp_40023 = (temp_40023.slice(0, -1)).concat(encode_39812(entry_40202)); } else { temp_40023 = encode_39812(entry_40202);};
i_40208 = addInt(i_40208, 1);
if (!(((colontmp__40205 != null ? colontmp__40205.length : 0) == L_40210))) {
failedAssertImpl_21839(makeNimstrLit("len(a) == L seq modified while iterating over it"));
}

}
} while(false);
} while(false);
if (result_40006 != null) { result_40006 = (result_40006.slice(0, -1)).concat(unsignedLEB128_36042((temp_40023 != null ? temp_40023.length-1 : 0), 0)); } else { result_40006 = unsignedLEB128_36042((temp_40023 != null ? temp_40023.length-1 : 0), 0);};
if (result_40006 != null) { result_40006 = (result_40006.slice(0, -1)).concat(temp_40023); } else { result_40006 = temp_40023;};
framePtr = F.prev;
return result_40006;
}
function encode_39242(le_39244) {

var result_39245 = null;
var F={procname:"encodes.encode",prev:framePtr,filename:"C:\\Users\\stisa\\OneDrive\\Progetti\\nimwasm-rewrite\\src\\nimwasm\\wasm\\encodes.nim",line:0};
framePtr = F;
F.line = 13;
result_39245 = nimCopy(null, (unsignedLEB128_36042(le_39244.count, 0).slice(0,-1)).concat(reprEnum(le_39244.ttype, NTI31057)), NTI138);
framePtr = F.prev;
return result_39245;
}
function encode_39254(fb_39256) {

var result_39257 = null;
var F={procname:"encodes.encode",prev:framePtr,filename:"C:\\Users\\stisa\\OneDrive\\Progetti\\nimwasm-rewrite\\src\\nimwasm\\wasm\\encodes.nim",line:0};
framePtr = F;
F.line = 15;
var temp_39266 = unsignedLEB128_36042((fb_39256.locals != null ? fb_39256.locals.length : 0), 0);
L1: do {
F.line = 16;
var loc_39402 = {count: 0, ttype: 0};
F.line = 3542;
var colontmp__39405 = null;
F.line = 16;
colontmp__39405 = fb_39256.locals;
F.line = 3544;
var i_39408 = 0;
F.line = 3545;
var L_39410 = (colontmp__39405 != null ? colontmp__39405.length : 0);
L2: do {
F.line = 3546;
L3: while (true) {
if (!(i_39408 < L_39410)) break L3;
F.line = 3547;
loc_39402 = colontmp__39405[chckIndx(i_39408, 0, colontmp__39405.length)-0];
if (temp_39266 != null) { temp_39266 = (temp_39266.slice(0, -1)).concat(encode_39242(loc_39402)); } else { temp_39266 = encode_39242(loc_39402);};
i_39408 = addInt(i_39408, 1);
if (!(((colontmp__39405 != null ? colontmp__39405.length : 0) == L_39410))) {
failedAssertImpl_21839(makeNimstrLit("len(a) == L seq modified while iterating over it"));
}

}
} while(false);
} while(false);
if (temp_39266 != null) { temp_39266 = (temp_39266.slice(0, -1)).concat(fb_39256.code); } else { temp_39266 = fb_39256.code;};
if (temp_39266 != null) { addChar(temp_39266, 11); } else { temp_39266 = [11, 0]; };
F.line = 20;
result_39257 = nimCopy(null, signedLEB128_36001((temp_39266 != null ? temp_39266.length-1 : 0)), NTI138);
if (result_39257 != null) { result_39257 = (result_39257.slice(0, -1)).concat(temp_39266); } else { result_39257 = temp_39266;};
framePtr = F.prev;
return result_39257;
}
function encode_40212(cs_40214) {

var result_40215 = null;
var F={procname:"encodes.encode",prev:framePtr,filename:"C:\\Users\\stisa\\OneDrive\\Progetti\\nimwasm-rewrite\\src\\nimwasm\\wasm\\encodes.nim",line:0};
framePtr = F;
F.line = 62;
result_40215 = nimCopy(null, makeNimstrLit("\x0A"), NTI138);
F.line = 63;
var temp_40232 = unsignedLEB128_36042((cs_40214.entries != null ? cs_40214.entries.length : 0), 0);
L1: do {
F.line = 65;
var bd_40402 = {locals: null, code: null};
F.line = 3542;
var colontmp__40405 = null;
F.line = 65;
colontmp__40405 = cs_40214.entries;
F.line = 3544;
var i_40408 = 0;
F.line = 3545;
var L_40410 = (colontmp__40405 != null ? colontmp__40405.length : 0);
L2: do {
F.line = 3546;
L3: while (true) {
if (!(i_40408 < L_40410)) break L3;
F.line = 3547;
bd_40402 = colontmp__40405[chckIndx(i_40408, 0, colontmp__40405.length)-0];
if (temp_40232 != null) { temp_40232 = (temp_40232.slice(0, -1)).concat(encode_39254(bd_40402)); } else { temp_40232 = encode_39254(bd_40402);};
i_40408 = addInt(i_40408, 1);
if (!(((colontmp__40405 != null ? colontmp__40405.length : 0) == L_40410))) {
failedAssertImpl_21839(makeNimstrLit("len(a) == L seq modified while iterating over it"));
}

}
} while(false);
} while(false);
if (result_40215 != null) { result_40215 = (result_40215.slice(0, -1)).concat(unsignedLEB128_36042((temp_40232 != null ? temp_40232.length-1 : 0), 0)); } else { result_40215 = unsignedLEB128_36042((temp_40232 != null ? temp_40232.length-1 : 0), 0);};
if (result_40215 != null) { result_40215 = (result_40215.slice(0, -1)).concat(temp_40232); } else { result_40215 = temp_40232;};
framePtr = F.prev;
return result_40215;
}
function encode_40824(m_40826) {

var result_40827 = null;
var F={procname:"encodes.encode",prev:framePtr,filename:"C:\\Users\\stisa\\OneDrive\\Progetti\\nimwasm-rewrite\\src\\nimwasm\\wasm\\encodes.nim",line:0};
framePtr = F;
F.line = 109;
result_40827 = nimCopy(null, (encode_40651(m_40826.magic).slice(0,-1)).concat(encode_40651(m_40826.version)), NTI138);
if (result_40827 != null) { result_40827 = (result_40827.slice(0, -1)).concat(encode_39613(m_40826.types)); } else { result_40827 = encode_39613(m_40826.types);};
if (result_40827 != null) { result_40827 = (result_40827.slice(0, -1)).concat(encode_39412(m_40826.functions)); } else { result_40827 = encode_39412(m_40826.functions);};
if (result_40827 != null) { result_40827 = (result_40827.slice(0, -1)).concat(encode_40003(m_40826.exports)); } else { result_40827 = encode_40003(m_40826.exports);};
if (result_40827 != null) { result_40827 = (result_40827.slice(0, -1)).concat(encode_40212(m_40826.codes)); } else { result_40827 = encode_40212(m_40826.codes);};
framePtr = F.prev;
return result_40827;
}
var code_70003 = encode_40824(mymod_69001[0]);
function instantiate_67080(binary_67082) {

var result_67085 = null;
var F={procname:"webassembly.instantiate",prev:framePtr,filename:"C:\\Users\\stisa\\OneDrive\\Progetti\\nimwasm-rewrite\\src\\nimwasm\\js\\webassembly.nim",line:0};
framePtr = F;
F.line = 30;
var buffer_67086 = null;
F.line = 31;
buffer_67086 = new Uint8Array(binary_67082.slice(0,-1));
F.line = 32;
result_67085 = WebAssembly.instantiate(buffer_67086);
framePtr = F.prev;
return result_67085;
}
function exps_70004(r_70006) {

var F={procname:"generate.exps",prev:framePtr,filename:"generate.nim",line:0};
framePtr = F;
F.line = 22;
wasmexports_70001[0] = r_70006.instance.exports;
rawEcho(cstrToNimstr((wasmexports_70001[0].add((2), (3)))+""));
framePtr = F.prev;
}
var inst_70052 = /**/[instantiate_67080(code_70003).then((exps_70004))];
